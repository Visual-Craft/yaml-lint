#!/bin/sh

set -ue

composer_bin="${COMPOSER_BIN:-composer}"
phar_composer_bin="${PHAR_COMPOSER_BIN:-phar-composer}"

if ! which "$composer_bin" > /dev/null 2>&1; then
    echo "Required composer bin '$composer_bin' is missing" >&2
    exit 1
fi

if ! which "$phar_composer_bin" > /dev/null 2>&1; then
    echo "Required phar-composer bin '$phar_composer_bin' is missing" >&2
    exit 1
fi

old_wd="$(pwd)"
root_dir="$(cd "$(dirname "$0")/../.." && pwd)"

if [ ! -e "$root_dir/dist" ]; then
    mkdir "$root_dir/dist"
fi

build_dir="$(mktemp -d)"
cd "$build_dir"
trap "rm -rf "$build_dir"; cd "$old_wd"" HUP INT TERM EXIT

cp -R "$root_dir/"* "$build_dir/"
rm -rf "$build_dir/support" "$build_dir/dist"
rm -f "$build_dir/.gitignore" "$build_dir/README.md"

for symfony_version in "2.8" "3.3.0" "3.4.0"; do
    rm -f "$build_dir/composer.lock"
    "$composer_bin" require --update-no-dev --no-interaction --optimize-autoloader \
        "symfony/console:~${symfony_version}" \
        "symfony/yaml:~${symfony_version}" \
        "symfony/debug:~${symfony_version}"
    find "$build_dir/vendor" -name Tests -type d -exec rm -rf {} +
    find "$build_dir/vendor" -name .gitignore -type f -exec rm {} +
    find "$build_dir/vendor" -name composer.json -type f -exec rm {} +
    find "$build_dir/vendor" -name phpunit.xml.dist -type f -exec rm {} +
    find "$build_dir/vendor" -name LICENSE -type f -exec rm {} +
    find "$build_dir/vendor" -name '*.md' -type f -exec rm {} +
    rm -rf "$build_dir/vendor/symfony/debug/Resources/ext"
    "$phar_composer_bin" build "$build_dir" "${root_dir}/dist/yaml-lint-symfony-${symfony_version}.phar"
done
